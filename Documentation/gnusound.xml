<?xml version="1.0" standalone="no"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article>
  <articleinfo>
    <date>2003-04-01</date>
    <title>GNUsound manual</title>
    <authorgroup>
      <author>
        <firstname>Pascal</firstname><surname>Haakmat</surname>
      </author>
    </authorgroup>
    <copyright>
      <year>2002</year>
      <year>2003</year>
      <year>2004</year>
      <year>2005</year>
      <holder>Pascal Haakmat</holder>
    </copyright>
    <revhistory>
      <revision>
        <revnumber>0</revnumber>
        <date>April 2003</date>
        <authorinitials>ph</authorinitials>
        <revremark>Initial revision (GNUsound 0.60 release).</revremark>
      </revision>
      <revision>
        <revnumber>1</revnumber>
        <date>January 2004</date>
        <authorinitials>ph</authorinitials>
        <revremark>Updates (GNUsound 0.6.2 release).</revremark>
      </revision>
      <revision>
        <revnumber>2</revnumber>
        <date>February 2004</date>
        <authorinitials>ph</authorinitials>
        <revremark>Updates (GNUsound 0.6.3 release).</revremark>
      </revision>
      <revision>
        <revnumber>3</revnumber>
        <date>February 2005</date>
        <authorinitials>ph</authorinitials>
        <revremark>Updates (GNUsound 0.7 release).</revremark>
      </revision>
    </revhistory>
  </articleinfo>
  <sect1 id="about">
    <title>About</title>
    <sect2 id="about-gnusound">
      <title>About GNUsound</title>

      <para>GNUsound is a multitrack sound editor for GNOME. It reads
      and writes many audio formats such as WAV, MP3 and FLAC through
      its modular system of file format drivers and can also extract
      the audio from video formats like MPG, WMV and AVI through the
      FFmpeg file format driver. It can use either OSS, ALSA or JACK
      for recording and playback and interfaces with the GLADSPA
      plugin system to provide a wide range of high-quality audio
      processing plugins including filters, compressors and
      delay effects.</para>
      
      <para>The most important feature of GNUsound, however, is to
      stay out of your way. This feature is not so easily expressed by
      a laundry list of acronyms, so you'll just have to try it and
      see for yourself.</para>

      <para>GNUsound is now officially a GNU package. See <ulink
      url="http://www.gnu.org/software/gnusound">http://www.gnu.org/software/gnusound</ulink>
      for more information.</para>

    </sect2>

    <sect2 id="about-documentation">
      <title>About this documentation</title>
      
      <para>This documentation is provided in order to help you get
      started with GNUsound. It does not exhaustively list all of
      GNUsounds capabilities and the ways in which functions can be
      combined to perform certain tasks. The best way to get familiar
      with the program is to experiment. Be creative.</para>

    </sect2>
  </sect1>
  <sect1 id="using">
    <title>Using GNUsound</title> 
    <sect2 id="installation">
      <title>Installation</title>
    
      <para>GNUsound can be installed on GNOME 1 or GNOME 2
      installations. It should build without problems on the most
      common GNU/Linux distributions, such as Debian, Red Hat and
      Fedora.</para>
    
      <sect3 id="prerequisites">
        <title>Prerequisites</title>
      
        <para>The following software is required to build and install
        GNUsound:</para>
      
        <itemizedlist>
          <listitem><para>gcc &gt;= 2.95</para></listitem>
          <listitem><para>Linux &gt;= 2.4</para></listitem>
          <listitem><para><ulink url="http://www.gnome.org">GNOME &gt;= 1.4 or &gt;= 2.4</ulink></para></listitem>
          <listitem><para>libglade &gt;= 0.14</para></listitem>
          <listitem><para><ulink url="http://www.68k.org/~michael/audiofile/">libaudiofile &gt;= 0.2.3</ulink></para></listitem>
          <listitem><para>OSS compatible sound driver or <ulink url="http://www.alsa-project.org">ALSA</ulink> &gt;= 1.0.2</para></listitem>
        </itemizedlist>
        
        <para>The following software is strongly recommended. This
        software must be installed prior to building GNUsound:</para>

        <itemizedlist>
          <listitem><para><ulink
          url="http://www.mega-nerd.com/SRC">libsamplerate</ulink></para></listitem>
          <listitem><para><ulink
          url="http://www.mega-nerd.com/libsndfile">libsndfile</ulink>
          &gt;= 1.0.4</para></listitem>
          <listitem><para><ulink
          url="http://ffmpeg.sourceforge.net/">FFmpeg (libavcodec, libavformat)</ulink></para></listitem>
          <listitem><para><ulink
          url="http://mp3dev.org/">LAME (libmp3lame)</ulink></para></listitem>
          <listitem><para><ulink
          url="http://flac.sourceforge.net/">FLAC (libFLAC)</ulink></para></listitem>
        </itemizedlist>
      </sect3>

      <sect3 id="installing-source">
        <title>Installing from source</title>
      
        <para>Unpack the source tarball and run the configure script:</para>
      
        <screen>
<prompt>$</prompt> <userinput>tar xjf gnusound-<replaceable>version</replaceable>.tar.bz2</userinput>
<prompt>$</prompt> <userinput>cd gnusound-<replaceable>version</replaceable></userinput>
<prompt>$</prompt> <userinput>./configure</userinput>
</screen>

        <para>The configure script should give a brief summary of the
        detected environment. If something seems to be missing or
        wrong, check that you have installed the appropriate -devel
        packages and check that your PKG_CONFIG_PATH environment
        variable includes those (possibly non-standard) locations
        where software has installed .pc files
        (e.g. <filename>/usr/local/lib/pkgconfig</filename>).</para>
        
        <para>Remember that
        <screen><prompt>$</prompt> <userinput>./configure --help</userinput></screen> 
        may also provide more information. </para>

        <para>If you're satisfied with the configuration, you can
        build GNUsound:</para>

        <screen>
<prompt>$</prompt> <userinput>make</userinput>
<prompt>$</prompt> <userinput>make install</userinput>
</screen>
        
        <para>To uninstall GNUsound, issue the command:</para>
        
        <screen>
<prompt>$</prompt> <userinput>make uninstall</userinput>
</screen>

        <para>GNUsound supports both GNOME 1 and GNOME 2: that is,
        there are no significant differences in functionality or
        usability between the GNOME 1 and GNOME 2 versions of
        GNUsound.</para>

        <para>GNUsound will automatically detect whether GNOME 1 or
        GNOME 2 is installed on the system at
        <command>configure</command> time. When both are installed,
        GNUsound will build for GNOME 2. When using GNOME 2, some
        aspects of GNUsound are a bit slower and the overall feel is
        heavier. For maximum performance you may want to disable GNOME
        2 support. You can do this by providing the
        <option>--without-gnome2</option> option to
        <command>configure</command>.</para>
        
      </sect3>
      <sect3 id="installing-binary">
        <title>Installing from binary packages</title>
        
        <para>Several people provide binary packages of GNUsound for a
        number of distributions. These are available from <ulink
        url="http://awacs.dhs.org/software/gnusound">the GNUsound
        homepage</ulink>.</para>
        
      </sect3>
    </sect2>
    <sect2 id="starting">
      <title>Starting GNUsound</title> 
      
      <para>If installation has been successful, there should be a
      GNUsound icon in your GNOME menus. Alternatively you can start
      GNUsound from the command line:</para>
      
      <screen>
<prompt>$</prompt> <userinput>gnusound</userinput>
</screen>

      <para>This latter method is actually recommended at this time,
      because GNUsound's output can help to resolve any issues you may
      encounter. </para>

    </sect2> 

    <sect2 id="opening">
      <title>Opening a file</title>

      <para>You can open audio files through the
      <guimenuitem>File->Open</guimenuitem> menu item, or by
      specifying them on the GNUsound commandline. GNUsound will
      automatically determine the filetype and load the file into
      memory. See <link linkend="modules_file">File format
      support</link> for the supported file format plugins. You must
      have enough memory (RAM + swap) to keep the entire file in
      memory.</para>

      <para>Some audio file formats can support the embedding of
      auxiliary data (such as loop points and instrument definitions)
      with the waveform data. GNUsound ignores such
      information.</para>

    </sect2>

    <sect2 id="waveform-display">
      <title>Waveform display</title>

      <para>GNUsound can display waveform peaks as well as the
      waveform RMS ("power"). Calculating the RMS slows down waveform
      drawing, however, so for maximum performance you might want to
      turn it off in by unchecking
      <guimenuitem>Settings->Preferences->View->Show waveform
      RMS</guimenuitem>.</para>

      <para>You can use <guimenuitem>View->Zoom In</guimenuitem> and
      <guimenuitem>View->Zoom Out</guimenuitem> to zoom in and out of
      the waveform. The mouse wheel can also be used for this
      purpose. <guimenuitem>View->Smaller</guimenuitem> and
      <guimenuitem>View->Bigger</guimenuitem> stretch or compress the
      waveform vertically.</para>

      <para>When GNUsound is not playing or recording, the
      <guimenuitem>Play/Record->Scrub Left</guimenuitem> and
      <guimenuitem>Play/Record->Scrub Right</guimenuitem> scroll the
      waveform to the left or to the right respectively. The Fast
      variants do the same, but to a greater degree (the <link
      linkend="pref:scrub_fast_multiplier">scrub_fast_multiplier</link>
      preference controls by how much).</para>
    </sect2>      

    <sect2 id="tools">
      <title>Tools</title>

      <sect3 id="tool:selection">
        <title>Selection Tool</title>
        
        <para>The Selection Tool allows you to select a part of the
        waveform for further processing.</para>

        <para>You can create a selection on a track by clicking, then
        dragging the mouse pointer over the region that you wish to
        select. Alternatively, you can hold the SHIFT key and give one
        of the movement commands in the
        <guimenu>Select</guimenu> menu.</para>

        <para>You can select multiple tracks by holding the CONTROL
        key while clicking on the tracks that you want to select. If a
        track is already selected, then this action deselects the
        given track. Alternatively, you can hold SHIFT and use the
        <guimenuitem>Select->Track Up</guimenuitem> and
        <guimenuitem>Select->Track Down</guimenuitem> commands.</para>
        
        <para>Changes to the selection are undoable. If you make a
        mistake which causes you to lose an important selection, you
        can issue the <guimenuitem>Edit->Undo</guimenuitem> command to get
        your selection back.</para>
        
        <para>A handy trick to temporarily save a selection that you
        don't want to lose while you do some editing elsewhere is to
        turn the current selection into a loop using
        <guimenuitem>Select->Selection To Loop</guimenuitem>, then do
        your stuff, and then to select the loop when you're
        done. Alternatively, you can set cuepoints to demarcate the
        selection that you want to save, then use
        <guimenuitem>Select->Snap to Cuepoints</guimenuitem> and the
        <guimenuitem>Select->Move Left</guimenuitem> and
        <guimenuitem>Select->Move Right</guimenuitem> commands to get
        your selection back.</para>
        
      </sect3>

      <sect3 id="tool:marker">
        <title>Marker Tool</title>

        <para>The Marker Tool allows you to manipulate cuepoints and
        envelopes.</para>

        <para>Cuepoints are like bookmarks. You can use them to mark
        important points in the sound file. By enabling
        <guimenuitem>Select->Snap To Cuepoints</guimenuitem> you can
        snap the selection to cuepoints.</para>

        <para>Envelopes modify the effect of some processing
        operations. The precise meaning depends on the
        operation.</para>

        <sect4 id="cuepoints">
          <title>Cuepoints</title>
          
          <para>Cuepoints appear as little red triangles with a
          flagpole and a label attached to them. </para>

          <para>You can create cuepoints by using the third mouse
          button when the Marker tool is active. Alternatively you can
          create them at any time by issuing
          <guimenuitem>Markers->Insert Cuepoint</guimenuitem>. This
          command creates a single marker at the cursor position. If
          there is a selection, then this command creates 2 markers at
          the left and right positions of the selection.</para>

          <para>If the Marker Tool is active, you can move cuepoints
          by clicking on them and dragging them around. Double
          clicking on the red triangle brings up a dialog where you
          can edit things like the cuepoint label.</para>
        </sect4>

        <sect4 id="envelopes">
          <title>Envelopes</title>
          
          <para>Envelopes appear as light or dark blue squares (called
          handles) connected by light or dark blue lines. The light
          and dark blue colors indicate the primary and auxiliary
          envelope, respectively.</para>

          <para>If the Marker Tool is active, you can create new
          handles by clicking in the position where you want to create
          them. Clicking on an envelope handler allows you to drag it
          around. The second mouse button is used to create and move
          around the auxiliary envelope.</para>

          <para>Envelopes have no effect in themselves. They serve
          only to control the effect of some other operation.</para>

          <para>Therefore the exact effect of an envelope depends on
          the selected operation; some operations don't have any
          parameters, and the envelopes will have no effect. For other
          operations, the primary envelope usually controls the first
          parameter, and the auxiliary envelope controls the second
          parameter. For yet other operations, it may be possible to
          explicitly assign a parameter to one of the two
          envelopes.</para>
          
          <para>It is possible to temporarily disable envelopes by
          issuing the <guimenuitem>View->Show Envelopes</guimenuitem>
          command. The envelopes will then become invisible and they
          will no longer affect any tools that you use.</para>
        </sect4>

      </sect3>

      <sect3 id="tool:pencil">
        <title>Pencil Tool</title>

        <para>The Pencil Tool allows you to perform sample-accurate
        waveform manipulation.</para>

        <para>When the Pencil Tool is active, you can click and drag
        inside the waveform to change its shape. If you zoom in
        closely enough, it's possible to manipulate individual
        samples.</para>

        <para>While the Pencil Tool is very useful to correct a few
        wayward samples, or even to achieve some interesting effects,
        the Pencil Tool's resolution is limited to the amplitude
        display resolution (which is controlled by
        <guimenuitem>View->Smaller</guimenuitem> and
        <guimenuitem>View->Bigger</guimenuitem>). Since the maximum
        amplitude display resolution is 256, this means that samples
        touched by the Pencil Tool have an 8 bit resolution at best
        (i.e. at the highest amplitude display resolution). For
        individual samples or purposefully intended effects this is no
        big deal. But if you were to use the Pencil Tool to visually
        duplicate the waveform from a 24 bit recording, you would end
        up with what is effectively an 8 bit recording.</para>
      </sect3>

      <sect3 id="tool:mixer">
        <title>Mixer Tool</title>

        <para>The Mixer Tool allows you to easily mix some audio onto
        a track. FIXME: more docs </para>

      </sect3>

      <sect3 id="tool:move">
        <title>Move Tool</title>

        <para>The Move Tool allows you to reorder tracks. You can
        choose to move the audio data for a track, the mixer settings,
        or the markers, or any combination of these.</para>

      </sect3>

    </sect2>

    <sect2 id="playback">
      <title>Playback</title>
      <para>GNUsound can playback as many tracks as your hardware can
      handle. You can specify the number of output channels to use in
      the
      <guimenuitem>Settings->Preferences->Playback/Record</guimenuitem>.
      Every track can be mixed onto as many output channels as
      desired, using the mixer level controls (the rainbow colored
      horizontal bars to the left of each audio track).</para>

      <para>GNUsound does not usually perform any implicit
      transformations of the audio format during
      playback<footnote><para>Although this depends on the selected
      audio driver; for example, the JACK driver will always convert
      audio data to the floating point format required by
      JACK.</para></footnote>; it just tries to open the audio device
      with the same parameters as the audio file (number of bits,
      sample rate) and starts playback. An error will occur (or in
      some rare cases garbled noise will be played back) if the device
      cannot handle those parameters.</para>

      <para>GNUsound does not attenuate mixed signals or check for
      output clipping: it is your responsibility to make sure you
      don't mix two channels too loudly.</para>

    </sect2>
    <sect2 id="record">
      <title>Recording</title>
      <para>GNUsound can record as many tracks simultaneously as
      your hardware will bear. You do this by selecting the tracks
      you wish to record on and issuing the
      <guimenuitem>Record</guimenuitem> command.</para>

      <para>There is no relation between which tracks are selected
      and which input channels are actually recorded except for the
      number of channels: that is, if you select tracks 1 and 3 and
      then start to record, track 1 will receive the first input
      channel, and track 3 will receive the second input
      channel.</para>

      <para>There is currently no way to explicitly control which
      input channels GNUsound records from. GNUsound will always
      incrementally assign the available input channels to the
      selected tracks. If there is one selected track, GNUsound
      records from the first available input channel, if there are
      two selected tracks, GNUsound records from the first two input
      channels, etcetera.</para>
    </sect2>      
      
    <sect2 id="saving">
      <title>Saving files</title>
      
      <para>You can save your work by issuing the
        <guimenuitem>File->Save</guimenuitem> command. Note that
        GNUsound does not preserve auxiliary info (such as loop points
        or instrument definitions) that may be embedded in an audio
        file. If you open a file containing such information and
        subsequently save it, overwriting the original, this
        information will be lost. </para>

        <para>Envelopes, cuepoints and other GNUsound specific data
        are saved in a
        <link
        linkend="usxfile"><replaceable>filename</replaceable>.usx
        file</link>, in a fairly self-explanatory text
        format.</para>

      <sect3 id="mixdown">
        <title>Mixdown</title>
        
        <para>Another way to save files is through the
          <guimenuitem>File->Mixdown</guimenuitem> command. Mixdown
          "plays back" to disk, that is, it will write a file to disk
          which is virtually identical to the data written to the
          audio device. You just have to specify which output channels
          to mix down.</para>
        
        <para>The purpose of this function is to reduce a large
          number of tracks to a smaller number, which is useful if you
          need to do a large amount of layering.</para>
        
      </sect3>
      
    </sect2>

    <sect2 id="memory">
      <title>Memory management</title>
      <para>GNUsound currently stores all its data, including
      clipboard and undo buffers, in memory. Ultimately some logic
      will be implemented to offload portions of that to disk, but for
      the time being you have to be a little considerate to prevent
      GNUsound from swallowing all available memory. One tool to help
      with that is under the
      <guimenu>Debug</guimenu> menu, where you can find the option
      <guimenuitem>Destroy Undo</guimenuitem>. This destroys all
      undo's, thus releasing all memory in use by the undo
      buffers. Of course you should only use this option when you
      don't need those undo's.</para>
    </sect2>

    <sect2 id="crash">
      <title>Crashes</title>

      <para>While a lot of effort has been expended on making GNUsound
      resilient in the face of adversity, all complex programs have
      bugs and GNUsound is no exception. Even if GNUsound itself was
      completely bugfree, there could still be bugs in the third party
      software that GNUsound relies on. So a lot of effort has also
      been expended on keeping your data safe when something does
      happen.</para>

      <para>If GNUsound crashes it will try to save the waveform data
      in open and modified buffers to a file with the extension
      <filename>.crashed.wav</filename>. To do this it uses a very
      simple and robust set of functions which minimize the
      interaction with the (probably corrupted) environment. This
      emergency code stands a good chance of salvaging your data when
      the fallout from the crash is relatively localized. In other
      cases it might be impossible to salvage anything.</para>
      
      <para>Due to the minimal nature of the emergency code, document
      settings (such as mixer settings, selection and loop points,
      envelopes, cuepoints, and grid settings) are never saved in the
      event of a crash.</para>

      <para>If GNUsound crashes, please <link linkend="bugreports">report
      it</link>. Diagnostics which may be helpful in tracking down the
      problem are written to the file
      <filename>~/.gnusound/gnusound.log</filename>.</para>

    </sect2>
  </sect1>

  <sect1 id="modules">
    <title>Modules</title>
    <para>This section briefly describes the various modules that come
    with GNUsound. Some of these modules (such as some of the file and
    audio driver modules) are "faceless", in that they extend
    GNUsound's functionality without providing a means to interact
    with them.</para>

    <para>Those modules that can be interacted with are available via
    the
    <guimenu>Tools</guimenu> menu. Most of them need an active
    selection to operate on, and can be further controlled using
    envelopes.</para>

    <sect2 id="amplify">
      <title>Amplify</title>

      <para>This module amplifies or attenuates the signal. The
      primary envelope determines by how much the signal is
      attenuated, from zero to twice as loud.</para>
    </sect2>

    <sect2 id="amptreshold">
      <title>Amplitude Treshold</title>
        
      <para>This module zeroes those parts of the signal that are
      below a certain treshold for a given duration. The
      <guibutton>Delete</guibutton> option toggles whether the
      relevant section in the signal should be zeroed or deleted. The
      <guibutton>Gang tracks</guibutton> option toggles whether each
      track should be processed separately, or whether the
      intersection from all selected tracks should be used. Finally
      the <guibutton>Invert</guibutton> option inverts the meaning
      of the operation, selecting noise rather than silence.</para>

    </sect2>

    <sect2 id="autozero">
      <title>Auto Zero</title>
        
      <para>This module shrinks the selection to the nearest zero
      points. This is mostly useful to prevent clicks in a looped
      sample.</para>
    </sect2>

    <sect2 id="bandpass">
      <title>Bandpass</title>
        
      <para>This module implements a very simple bandpass filter. It
      was lifted from the sox audio tool distribution mostly as a
      curiosity. Much better and more versatile filters are available
      through the <link linkend="ladspa"><acronym>GLADSPA</acronym>
      plugins</link> module.
      </para>
    </sect2>

    <sect2 id="declip">
      <title>Declip</title>
        
      <para>This module removes some digital clipping artifacts from
      material that was recorded too loud. It is very naive but still
      I find it works rather well.</para>

    </sect2>

    <sect2 id="delay">
      <title>Delay</title>
        
      <para>This module implements a simple digital delay. The
      <guibutton>Duration</guibutton> parameter controls the
      duration of each delay in the time units as given by the time
      control bar. This parameter is controlled by the primary
      envelope. The <guibutton>Times</guibutton> parameter controls
      the number of delays. The <guibutton>Decay</guibutton>
      parameters controls the rate of decay. This parameter is
      controlled by the auxiliary envelope.</para>

    </sect2>

    <sect2 id="fadein">
      <title>Fade In</title>
        
      <para>This module fades in the signal. The primary envelope
      controls the attenuation factor.</para>
    </sect2>

    <sect2 id="fadeout">
      <title>Fade Out</title>
        
      <para>This module fades out the signal. The primary envelope
      controls the attenuation factor.</para>
    </sect2>

    <sect2 id="ladspa">
      <title>GLADSPA Plugins</title>
        
      <para>This module implements support for the
      <acronym>LADSPA</acronym> plugin architecture.</para>

      <note><para>LADSPA stands for Linux Audio Developers Simple
      Plugin Architecture. This name is inaccurate, since neither is
      the functionality of LADSPA exclusively tied to the Linux
      kernel, nor are the developers of LADSPA related to Linux kernel
      development. The name LADSPA therefore furthers the confusion
      between the Linux kernel and the GNU/Linux system. As part of
      the GNU Project's effort to clear up this confusion, we 
      refer to it as GLADSPA instead. For more information on why the
      name Linux does not fairly describe the GNU/Linux system, see
      <ulink
      url="http://www.gnu.org/gnu/gnu-linux-faq.html">
      http://www.gnu.org/gnu/gnu-linux-faq.html</ulink></para></note>
      
      <para>You must install some GLADSPA plugins to use this module,
      these can be obtained from <ulink
      url="http://www.ladspa.org">http://www.ladspa.org</ulink>. Before
      starting GNUsound make sure the
      <systemitem>LADSPA_PATH</systemitem> environment variable points
      to the location where your plugins are installed. If the
      <systemitem>LADSPA_PATH</systemitem> is not defined then
      GNUsound will search <filename>/usr/local/lib/ladspa</filename>
      for plugins.</para>
        
      <para>The interface for this module consists of a window
      that is split in two halves: the left half contains the 
      available plugins, and the right half contains the parameters
      for the selected plugin.</para>

      <para>When the list of plugins is active, you can press a key
      to jump to the first plugin whose name starts with that
      letter.</para>

      <para>The right half of the window has sliders
      to set the parameters for the plugin. You can use the
      <guibutton>Env1</guibutton> and <guibutton>Env2</guibutton>
      buttons to assign a parameter to the corresponding envelope.
      The envelope modifies the parameter value in the following way:
      if the envelope value is 0, then the parameter value is the
      parameter value set by the user. If the envelope value is
      between 0 and 1, then the parameter value is between the user
      selected parameter value and the maximum parameter
      value. Finally if the envelope value is between 0 and -1, then
      the parameter value is between the user selected parameter value
      and the minimum parameter value. </para>

      <para>An envelope assigned to a GLADSPA parameter does not
      change that parameter every sample; rather the signal is
      processed in blocks and the envelope value applies to an entire
      block. The size of these blocks can be changed in <link
      linkend="configfile">the configuration file</link> (the
      <systemitem>ladspa_segment_time</systemitem> parameter). The
      default value for this parameter is 0.01 seconds.</para>
    </sect2>

    <sect2 id="lowpass">
      <title>Lowpass</title> <para>This module implements a very
      simple lowpass filter. It was lifted from the web and is
      included mostly as a curiosity. Much better and more versatile
      filters are available through the <link linkend="ladspa">GLADSPA
      plugins</link> module.</para>
    </sect2>
      
    <sect2 id="mix">
      <title>Mix</title>
      <para>This module mixes the signal from the second selected
      track into the first. The primary envelopes on the selected
      tracks specify the contribution of each track to the final
      signal.</para>
    </sect2>

    <sect2 id="normalize">
      <title>Normalize</title> 

      <para>This module maximizes the peak amplitude of the selected
      region. If the selection spans multiple tracks, then the global
      peak for the selected tracks is maximized.</para>
    </sect2>

    <sect2 id="resample">
      <title>Resample</title>
      <para>This module changes the sampling rate of the selected
      audio. Depending on whether you have 
      <ulink url="http://www.mega-nerd.com/SRC/">libsamplerate</ulink>
      installed it offers one or more methods of doing so, with
      varying quality/speed tradeoffs. The primary envelope controls
      the rate.</para>
    </sect2>

    <sect2 id="reverse">
      <title>Reverse</title>
      <para>This module reverses the selected data.</para>
    </sect2>
      
    <sect2 id="tonegen">
      <title>Tone generator</title> 
        
      <para>This module implements a simple tone generator which can also be
      used to generate silence. The primary envelope controls the
      amplitude while the auxiliary envelope controls the
      frequency.</para>
    </sect2>
    
    <sect2 id="modules_playback">
      <title>Playback and recording support</title>

      <para>From version 0.7 onwards, GNUsound uses a modular
      playback/record architecture. This makes it easier to 
      support different audio APIs.</para>

      <sect3 id="player_oss">
        <title>player_oss: OSS support</title>

        <para>The Open Sound System is an obsolescent audio API for
        Unix. It comes in a Free variant, which is a part of the Linux
        kernel, and a commercial variant marketed by <ulink
        url="http://4front-tech.com/">4Front Technologies</ulink>. The
        commercial variant is better in some respects than the Free
        version and supports some very high quality audio
        cards. OSS/Free has been deprecated since Linux kernel version
        2.6 in favor of <acronym>ALSA</acronym> (Advanced Linux Sound
        Architecture).</para>

        <para>The <acronym>OSS</acronym> API is rather sparse. Trying
        to do anything beyond simple playback and record with OSS/Free
        is basically impossible due to the varying quality of drivers
        and hardware and the poorly specced API. On the other hand,
        <acronym>OSS</acronym> is widely available and easy to use for
        both developers and users.</para>

        <para>The OSS driver has undergone a lot of testing. So this
        is a good choice if you don't need any of the advanced
        facilities offered by ALSA.
        </para>
      </sect3> 

      <sect3 id="player_alsa">
        <title>player_alsa: ALSA support</title>

        <para>The Advanced Linux Sound Architecture provides free
        (GPL'd) drivers for a wide variety of sound cards, low end as
        well as high end. In addition it provides a very flexible API
        which allows the creation of virtual devices and filter chains
        and much more. ALSA can also detect recording overruns and
        playback underruns when they occur.</para>

        <para>ALSA provides a powerful architecture, but the
        documentation is rather sparse, making it difficult to get the
        most out of the system. It takes effort to get acquainted with
        ALSA's advanced capabilities.</para>

        <para>The ALSA driver was reasonably well tested, but it could
        probably be better. If you run into trouble, please report
        it.</para>

        <para>ALSA is a part of the Linux kernel 2.6 and up, and is
        also available from: <ulink
        url="http://www.alsa-project.org">http://www.alsa-project.org</ulink>.</para>
      </sect3> 

      <sect3 id="player_jack">
        <title>player_jack: JACK support</title>

        <para>The JACK Audio Connection Kit provides a virtual audio
        bus that JACK-aware applications can use to transport audio
        between eachother. It's reminiscent of software like ReWire on
        other platforms.</para>

        <para>JACK has rather stringent timing requirements. In order
        to get satisfactory performance it may be necessary to upgrade
        your kernel or to apply patches to minimize latency.</para>

        <para>The JACK driver was not very well tested at all. This,
        in combination with JACK's demanding requirements, means that
        it might work only if you carefully tune your setup, or that
        it works only intermittently, or that it doesn't work at
        all. Problem reports are welcomed but given low priority if
        they don't include at least a suggestion for a remedy.</para>

        <para>JACK is available from: <ulink url="http://jackit.sourceforge.net">http://jackit.sourceforge.net</ulink>.</para>
      </sect3> 
    </sect2>

    <sect2 id="modules_file">
      <title>File format support</title>

      <para>From version 0.7 onwards, GNUsound uses a modular file
      load/save architecture. This makes it much easier to add support
      for new file formats.</para>

      <para>Which file drivers are available depends on your system
      configuration at build time. If you want to take advantage of
      the improved file format support you will need to install the
      software mentioned below prior to building and installing
      GNUsound.</para>

      <para>When loading a file, GNUsound tries to autodetect the file
      type by having each driver probe the file in turn, until one of
      the drivers recognizes it.</para>

      <para>This is not a waterproof strategy: it's not always
      possible to determine the file type with 100% certainty. In
      particular the <link linkend="file_lame">LAME</link> and <link
      linkend="file_ffmpeg">FFmpeg</link> drivers can sometimes
      misidentify files. This can lead to garbage being read or even
      crashes.</para>

      <para>To minimize the chances of this happening, the order in
      which the file is probed by the drivers is important. They need
      to be ordered in such a way that the driver with the highest
      probability of getting confused gets to probe last.</para>

      <para>The default probe order was determined through some
      experimentation to give the best results, but if necessary it
      can be changed through the <link
      linkend="pref:file.drivers.probe_order">file.drivers.probe_order</link>
      preference.</para>

      <sect3 id="file_af">
        <title>file_af: AudioFile support</title>

        <para>The AudioFile module uses libaudiofile to load and save
        files. It is strongly recommended you use version 0.2.3 or
        higher of libaudiofile. Earlier versions exhibited some bugs
        which could lead to crashes. AudioFile is a part of GNOME. If
        you run into trouble compiling this module, make sure you have
        installed the audiofile-devel package.</para>

        <para>AudioFile is available from: <ulink
          url="http://www.68k.org/~michael/audiofile/">http://www.68k.org/~michael/audiofile/</ulink></para>

        <para>See the AudioFile home page for a list of supported file
        formats.</para>
      </sect3>

      <sect3 id="file_ffmpeg">
        <title>file_ffmpeg: FFmpeg support</title>
        <para>This module uses FFmpeg (specifically libavformat and
        libavcodec) to load files. FFmpeg is a system of audio/video
        recording/conversion/streaming tools. It includes libavcodec
        and libavformat which can read/write a huge number
        formats.</para>

        <para>If you would like to be able to use GNUsound to extract
        the audio from video files such as .AVI or .MPG, then install
        FFmpeg. For GNUsound to be able to use FFmpeg it is necessary
        to do
        <userinput>make installlib</userinput> in the FFmpeg source
        tree.</para>

        <para>FFmpeg is available from: <ulink
          url="http://ffmpeg.sourceforge.net/">http://ffmpeg.sourceforge.net/</ulink></para>

        <para>For supported file formats see <ulink url="http://ffmpeg.sourceforge.net/ffmpeg-doc.html#SEC16">the FFmpeg documentation</ulink>.</para>

        <para>GNUsound only supports file loading through
        FFmpeg.</para>

      </sect3>

      <sect3 id="file_flac">
        <title>file_flac: FLAC support</title> <para>This module
        provides support for loading and saving of FLAC format files
        through libFLAC. FLAC is a free lossless audio codec which can
        reduce the size of files by as much as 50% without loss of
        quality. A great format for archival and storage
        purposes.</para>

        <para>FLAC is available from: <ulink
          url="http://flac.sourceforge.net/">http://flac.sourceforge.net/</ulink></para>

      </sect3>

      <sect3 id="file_lame">
        <title>file_lame: LAME MP3 support</title>
        <para>This module provides support for loading and saving of
        MP3 format files through libmp3lame. LAME is a very high
        quality MP3 encoder released under the GNU GPL.</para>

        <para>LAME is available from: <ulink
          url="http://mp3dev.org/">http://mp3dev.org/</ulink></para>

      </sect3>

      <sect3 id="file_sndfile">
        <title>file_sndfile: libsndfile support</title>
        <para>This module provides support for loading and saving of
        a variety of audio formats through libsndfile. libsndfile is
        somewhat similar to AudioFile but it supports more
        formats.</para>

        <para>libsndfile is available from: <ulink
          url="http://www.mega-nerd.com/libsndfile">http://www.mega-nerd.com/libsndfile</ulink></para>

        <para>For supported file formats see <ulink url="http://www.mega-nerd.com/libsndfile/#Features">the libsndfile documentation</ulink>.</para>

      </sect3>
         
    </sect2>
  </sect1>

  <sect1 id="reference">
    <title>Reference</title>

    <sect2 id="configfile">
      <title>Configuration file</title>
                    
      <para>GNUsound stores its configuration information in a text file
      in the location
      <filename>~/.gnome/gnusound</filename> (for GNOME 1
      installations) or <filename>~/.gnome2/gnusound</filename> (for
      GNOME 2 installations). Although some of the most
      important properties that are stored in this file can be
      edited from within GNUsound itself, this file also contains
      other options that might be of interest. For example, it
      contains the colors that GNUsound uses to draw various parts
      of the interface. You can change these here if your aesthetic
      sensibilities differ from those of the author.</para>

      <para>It should be understood that editing the configuration
      file in this fashion may yield unexpected results. Also there is
      always a chance that the format of the file will change in the
      future, as well as the meaning of the properties and their
      values. </para>

<variablelist>
<varlistentry><term id="pref:alsa.input_channels">alsa.input_channels</term>
<listitem><para>The number of input channels to allocate on the capture device.</para></listitem></varlistentry>
<varlistentry><term id="pref:alsa.output_channels">alsa.output_channels</term>
<listitem><para>The number of output channels to allocate on the playback device.</para></listitem></varlistentry>
<varlistentry><term id="pref:alsa.overrun_recovery">alsa.overrun_recovery</term>
<listitem><para>Whether to stop playback/recording on overruns.</para></listitem></varlistentry>
<varlistentry><term id="pref:alsa.playback_device">alsa.playback_device</term>
<listitem><para>The playback device.</para></listitem></varlistentry>
<varlistentry><term id="pref:alsa.record_device">alsa.record_device</term>
<listitem><para>The capture device.</para></listitem></varlistentry>
<varlistentry><term id="pref:alsa.underrun_recovery">alsa.underrun_recovery</term>
<listitem><para>Whether to stop playback/recording on underruns.</para></listitem></varlistentry>
<varlistentry><term id="pref:audio_chunk_duration">audio_chunk_duration</term>
<listitem><para>This value determines the maximum audio buffer size for recording and playback, in seconds.</para></listitem></varlistentry>
<varlistentry><term id="pref:audio_driver">audio_driver</term>
<listitem><para>Which audio driver to use.</para></listitem></varlistentry>
<varlistentry><term id="pref:default_bpm">default_bpm</term>
<listitem><para>The default beats per minute when none has been specified.</para></listitem></varlistentry>
<varlistentry><term id="pref:default_sample_rate">default_sample_rate</term>
<listitem><para>The default sample rate when creating a new document</para></listitem></varlistentry>
<varlistentry><term id="pref:default_sample_type">default_sample_type</term>
<listitem><para>The default sample type when creating a new document.</para></listitem></varlistentry>
<varlistentry><term id="pref:file.drivers.probe_order">file.drivers.probe_order</term>
<listitem><para>Comma-separated list describing the probing order for file format drivers.</para></listitem></varlistentry>
<varlistentry><term id="pref:follow_playback">follow_playback</term>
<listitem><para>Whether the view should track the playback position.</para></listitem></varlistentry>
<varlistentry><term id="pref:ladspa.path">ladspa.path</term>
<listitem><para>Path to GLADSPA plugins.</para></listitem></varlistentry>
<varlistentry><term id="pref:ladspa.segment_time">ladspa.segment_time</term>
<listitem><para>Specifies the granularity with which envelopes are applied to GLADSPA plugin processing, in seconds.</para></listitem></varlistentry>
<varlistentry><term id="pref:lame.bitrate">lame.bitrate</term>
<listitem><para>The bitrate to use.</para></listitem></varlistentry>
<varlistentry><term id="pref:lame.encoder">lame.encoder</term>
<listitem><para>Undocumented.</para></listitem></varlistentry>
<varlistentry><term id="pref:lame.mono">lame.mono</term>
<listitem><para>Whether to use mono encoding.</para></listitem></varlistentry>
<varlistentry><term id="pref:lame.quality">lame.quality</term>
<listitem><para>The quality level to achieve when the encoder should target quality.</para></listitem></varlistentry>
<varlistentry><term id="pref:lame.target">lame.target</term>
<listitem><para>Whether the encoder should target a certain quality (giving a variable bitrate), or whether to encoder should target a certain bitrate.</para></listitem></varlistentry>
<varlistentry><term id="pref:lame.use_cbr">lame.use_cbr</term>
<listitem><para>Whether to keep the bitrate constant.</para></listitem></varlistentry>
<varlistentry><term id="pref:lame.vbr_mode">lame.vbr_mode</term>
<listitem><para>Whether to use the old style VBR encoder or the new one.</para></listitem></varlistentry>
<varlistentry><term id="pref:max_tracks">max_tracks</term>
<listitem><para>The maximum number of tracks that can be edited.</para></listitem></varlistentry>
<varlistentry><term id="pref:max_undo_depth">max_undo_depth</term>
<listitem><para>The maximum number of Undo's.</para></listitem></varlistentry>
<varlistentry><term id="pref:oss.fragments">oss.fragments</term>
<listitem><para>Undocumented</para></listitem></varlistentry>
<varlistentry><term id="pref:oss.input_channels">oss.input_channels</term>
<listitem><para>The number of input channels to allocate on the capture device.</para></listitem></varlistentry>
<varlistentry><term id="pref:oss.output_channels">oss.output_channels</term>
<listitem><para>The number of output channels to allocate on the playback device.</para></listitem></varlistentry>
<varlistentry><term id="pref:oss.playback_device">oss.playback_device</term>
<listitem><para>The playback device.</para></listitem></varlistentry>
<varlistentry><term id="pref:oss.playback_signed_int8_to_unsigned_int8">oss.playback_signed_int8_to_unsigned_int8</term>
<listitem><para>Whether to convert signed 8 bit samples to unsigned 8 bit samples on playback. For soundcards where AFMT_S8 doesn't work.</para></listitem></varlistentry>
<varlistentry><term id="pref:oss.record_device">oss.record_device</term>
<listitem><para>The capture device.</para></listitem></varlistentry>
<varlistentry><term id="pref:playback_display_interval">playback_display_interval</term>
<listitem><para>How often to update the display during playback (in milliseconds).</para></listitem></varlistentry>
<varlistentry><term id="pref:record_replace">record_replace</term>
<listitem><para>Whether record should overwrite data underneath the recording cursor or insert the recorded data before the recording cursor.</para></listitem></varlistentry>
<varlistentry><term id="pref:restore_scrollbar_positions">restore_scrollbar_positions</term>
<listitem><para>Whether to restore the last saved scrollbar positions when opening a document.</para></listitem></varlistentry>
<varlistentry><term id="pref:restore_window_positions">restore_window_positions</term>
<listitem><para>Whether to restore the last saved window positions when opening a document.</para></listitem></varlistentry>
<varlistentry><term id="pref:scrub_fast_multiplier">scrub_fast_multiplier</term>
<listitem><para>By what amount to multiply scrub movement when Fast scrubbing.</para></listitem></varlistentry>
<varlistentry><term id="pref:scrub_playback_amount">scrub_playback_amount</term>
<listitem><para>By how many samples the scrub command moves the playback cursor left or right during playback.</para></listitem></varlistentry>
<varlistentry><term id="pref:scrub_silent_amount">scrub_silent_amount</term>
<listitem><para>By how many samples the scrub command moves the viewport left or right when not playing back.</para></listitem></varlistentry>
<varlistentry><term id="pref:show_envelope">show_envelope</term>
<listitem><para>Whether to show envelopes.</para></listitem></varlistentry>
<varlistentry><term id="pref:show_grid">show_grid</term>
<listitem><para>Whether to show the grid.</para></listitem></varlistentry>
<varlistentry><term id="pref:show_zero">show_zero</term>
<listitem><para>Whether to show the amplitude 0 line.</para></listitem></varlistentry>
<varlistentry><term id="pref:snap_to_cuepoints">snap_to_cuepoints</term>
<listitem><para>Determines whether to automatically snap the selection at cuepoint positions.</para></listitem></varlistentry>
<varlistentry><term id="pref:snap_to_grid">snap_to_grid</term>
<listitem><para>Determines whether to automatically snap the selection at grid positions.</para></listitem></varlistentry>
<varlistentry><term id="pref:view.wave.draw.connect_samples">view.wave.draw.connect_samples</term>
<listitem><para>Whether to draw samples as if they were contiguous or not.</para></listitem></varlistentry>
<varlistentry><term id="pref:view.wave.draw.rms.enable">view.wave.draw.rms.enable</term>
<listitem><para>Whether to draw the waveform RMS. Disabling gives faster display.</para></listitem></varlistentry>
<varlistentry><term id="pref:view.wave.draw.rms.minimum_zoom">view.wave.draw.rms.minimum_zoom</term>
<listitem><para>From what zoom factor the waveform RMS should be drawn.</para></listitem></varlistentry>
</variablelist>

    </sect2>

    <sect2 id="usxfile">
      <title>.USX document settings file</title>
      <para>GNUsound stores all it's document settings, such as
      envelopes in cuepoints, in a file separate from the audio
      data. This file is fairly self-explanatory and it doesn't hurt
      to edit it by hand. </para>
    </sect2>
  </sect1>

  <sect1 id="faq">
    <title>Frequently asked questions</title> 
    <qandaset defaultlabel='qanda'>
      <qandaentry>
        <question>
          <para>What platforms does GNUsound run on?</para>
        </question>
        <answer>
          <para>GNUsound should run on any GNU-based system with GNOME
          and a soundcard, but since the author develops GNUsound on a
          GNU/Linux system with Intel-based hardware, that is what is
          best supported. Ports to other systems or <link
          linkend="bugreports">bug reports</link>/patches relating to
          portability are always welcome.</para>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>What is the recommended setup for using GNUsound?</para>
        </question>
        <answer>
          <para>Ideally, a dual CPU machine with at least 1 GB of RAM
          and a multitrack audio card. I've found the Delta series
          cards from <ulink
          url="http://www.midiman.com">M-Audio/Midiman</ulink> to work
          very well. On the software side, you might want to look into
          the various low-latency patches floating around for the
          Linux kernel.</para>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>Will GNUsound support audio drivers other than OSS?</para>
        </question>
        <answer>
          <para>From version 0.7 onward, GNUsound can support audio
          drivers other than OSS. As of current writing, GNUsound
          supports both OSS and ALSA (versions 1.0.2 and greater). An
          experimental driver for JACK is also available.</para>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>What audio file formats does GNUsound support?</para>
        </question>
        <answer>
          <para>From version 0.7 onwards, GNUsound uses a modular file
          load/save architecture. Modules are provided for
          libaudiofile, libsndfile, LAME, FLAC and FFMPEG. See <link
          linkend="modules_file">File format support</link> for more
          information.</para>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>I get pops/crackles on playback/record.</para>
        </question>
        <answer>
          <para>There are a lot of reasons why this might
          happen. Generally it indicates that GNUsound didn't tend to
          the audio driver's needs quickly enough. </para>

          <para>The problem with sound playback/recording is that
          sound cannot wait. If GNUsound cannot get fresh audio data
          to and from the soundcard quickly enough, you will hear pops
          and your recordings will contain garbage.</para>

          <para>Standard computers running general purpose operating
          systems such as GNU/Linux have been designed to give good
          average performance across a wide variety of tasks. But
          audio applications don't care about average
          performance. They care about worst-case performance. Sadly,
          it is fairly hard for a general purpose system to make
          guarantees about worst-case performance, especially since
          doing so usually degrades overall performance.</para>

          <para>The best way to minimize worst-case performance is to
          get a dual CPU machine and a good soundcard with good
          drivers. Also, building a low-latency kernel is a good
          idea. Andrew Morton maintains a bunch of low-latency patches
          for the 2.4 kernel series at <ulink
          url="http://www.zip.com.au/~akpm/linux/schedlat.html">http://www.zip.com.au/~akpm/linux/schedlat.html</ulink>.</para>

          <para>The 2.6 kernel includes its own set of measures to
          improve overall responsiveness and latency. You can also try
          another sound card or another driver (i.e. when you're using
          OSS drivers, try ALSA, and vice versa).</para>

          <para>Some less intrusive measures that you can take are
          tuning the parameters in the
          <guimenuitem>Preferences</guimenuitem>-&gt;<guilabel>Play/Record</guilabel>
          tab and using a smaller zoom setting while playing and
          recording.</para>

        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>Why does GNUsound crash when I try to load a very
          large file?</para>
        </question>
        <answer>
          <para>Either because you've found a bug (please <link
          linkend="bugreports">report it</link>), or because you are
          running a Linux kernel that has ``memory overcommit''
          enabled.</para>

          <para>Memory overcommit is a Linux kernel feature that lets
          applications allocate more memory than is actually
          available. The idea behind this feature is that some
          applications allocate large amounts of memory "just in
          case", but never actually use it. Thus, memory overcommit
          allows you to run more applications than actually fit in
          your memory, provided the applications don't actually use
          the memory they've allocated. If they do, then the kernel
          terminates the application.</para>

          <para>GNUsound needs enough memory (RAM + swap) to load a
          file into memory completely. GNUsound will try to recover
          gracefully from memory allocation failures, but sometimes it
          simply can't. In particular, you may have problems when
          using a kernel that has memory overcommit enabled. This may
          result in GNUsound being killed as it tries to load the
          file. To try and solve the problem, you can either increase
          the amount of memory (by adding RAM or swap), or you can
          disable memory overcommit by typing (as root): </para>
<screen>
<prompt>$</prompt> <userinput>echo 2 > /proc/sys/vm/overcommit_memory</userinput>
</screen>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>Why does GNUsound use so much memory?</para>
        </question>
        <answer>
          <para>GNUsound needs memory to store the sound file itself,
          the clipboard buffer, and all undo buffers. Since sound
          files can be very big, this takes up a lot of memory. For
          that reason, many sound editors use a disk-based approach,
          where they use the disk to store some or all of the audio
          data. This allows them to edit and load files that don't fit
          into memory in their entirety. However, the disk-based
          approach requires a more complicated program design and in
          is almost always slower than the memory-based
          approach. That's incompatible with GNUsound's short-term
          goals, but future versions may provide support for
          a disk backing store.</para>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>Why are you calling LADSPA GLADSPA?</para>
        </question>
        <answer>
          <para>LADSPA stands for Linux Audio Developers Simple Plugin
      Architecture. This name is inaccurate, since neither is the
      functionality of LADSPA exclusively tied to the Linux kernel,
      nor are the developers of LADSPA related to Linux kernel
      development. The name LADSPA therefore furthers the confusion
      between the Linux kernel and the GNU/Linux system. As part of
      the GNU Project's effort to clear up this confusion, we refer to
      it as GLADSPA instead. For more information on why the name
      Linux does not fairly describe the GNU/Linux system, see
      <ulink
      url="http://www.gnu.org/gnu/gnu-linux-faq.html">
      http://www.gnu.org/gnu/gnu-linux-faq.html</ulink></para>
        </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>Why is GNUsound called GNUsound? It is not a GNU
          package.</para>
        </question>
        <answer>
          <para>The name GNUsound is both a homage to and play on the
          GNU moniker. The official expansion of GNUsound is ``GNOME U
          sound editor'', where the "U" can stand for a number of
          mockingly depreciatory adjectives, such as unwarranted,
          undocumented, or Unix-incompatible.</para>

          <para>As it turns out, some people didn't like the use of
          the GNU moniker, as GNUsound was not actually a GNU
          package. So GNUsound was proposed as a GNU package in
          December 2003, and officially became one in February
          2004.</para>
        </answer>
      </qandaentry>

    </qandaset>
  </sect1>

  <sect1 id="bugreports">
    <title>How to report bugs</title> 

    <para>If you think you have found a bug in GNUsound, please report
    it to the <email>gnusound-common@lists.sourceforge.net</email>
    mailing list. Include the following information in your bug report
    (if you don't know a particular piece of information, please
    mention that as well):</para>
    
    <itemizedlist spacing="compact">
      <listitem><para>Which operating system/distribution you are
      using and which version.</para></listitem>
      <listitem><para>What kernel you are using and which
      version.</para></listitem>
      <listitem><para>Which version of GNUsound you are using.</para></listitem>
      <listitem><para>If the problem is related to the GUI:</para>
        <itemizedlist>
          <listitem><para>Which version of GNOME you are
              using.</para></listitem>
          <listitem><para>Which version of libglade you are
              using.</para></listitem>
        </itemizedlist>
      </listitem>
      <listitem><para>If the problem is related to playback/recording:</para>
        <itemizedlist>
          <listitem><para>Which audio driver you are using (e.g. OSS,
          ALSA, ...) and which version.</para></listitem>
          <listitem><para>Whether the problem is specific to that
          (version of the) audio driver or not.</para></listitem>
        </itemizedlist>
      </listitem>
      <listitem><para>If the problem is related to
          compilation/installation:</para>
        <itemizedlist>
          <listitem><para>Which compiler you are using and which
          version.</para></listitem>
        </itemizedlist>
      </listitem>
      <listitem><para>If you installed from source, a copy of the
          <filename>config.log</filename> and
          <filename>defines.h</filename> file.</para></listitem>
      <listitem><para>The (relevant) output from GNUsound leading up
          to the bug (you will need to start GNUsound from a terminal
          window to see the output).</para></listitem>
      <listitem><para>If GNUsound crashes, a copy of the
      <filename>~/.gnusound/gnusound.log</filename>
      file. If possible a valgrind or gdb backtrace would also be
      appreciated since they may provide more information.</para></listitem>
      <listitem><para>Whether the bug is reproducible.</para></listitem>
      <listitem><para>The sequence of actions that triggered the
          bug.</para></listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="contrib">
    <title>Contributing</title>

    <sect2 id="contrib_modules">
      <title>Writing modules</title>

      <para>GNUsound provides a fairly flexible and powerful modular
      infrastructure. Modules are used for example to extend the file
      formats that GNUsound can read and write, to provide editing and
      selection tools and to provide audio processing plugins.</para>
      
      <sect3 id="contrib_modules_build">
        <title>Module build environment</title>

        <para>Currently, building a module requires access to the
        GNUsound source tree, to locate the necessary headers and to
        get the installation paths. </para>

        <para>The best thing to do is to write a configure script
        which allows the user to specify the location of the GNUsound
        source code. This configure script should also create a file
        .MODULE_NAME.cflags containing the compiler and linker flags
        for the module. The module code itself should be placed in
        MODULE_NAME.c. Then you can use the GNUsound module Makefile
        to do the actual make: <userinput>make -f
        <replaceable>path-to-GNUsound-source</replaceable>/modules/Makefile''</userinput>.
        </para>

        <para>The GNUsound module Makefile also provides suitable
        install and clean targets.</para>

        <para>So, from the user's point of view, installing a module
        requires unpacking of the GNUsound source tree, running
        ./configure and make install. Then he should unpack the module
        source, run the module's ./configure script with the path of
        the GNUsound source code, and do a make followed by make
        install.</para>

        <para>When the API is more stable, this procedure will be
        replaced by a -devel package which provides the necessary
        headers, m4 autoconf macros and pkg-config info.</para>
      </sect3>

    </sect2>
  </sect1>


  <sect1 id="license">
  
    <title>License and disclaimer</title> 
    
    <para>The GNUsound program, its documentation, and any other
    auxiliary resources involved in building, installing and running the
    program, such as graphics, Makefiles, and user interface
    definition files, are licensed under the GNU General Public
    License. This includes, but is not limited to, all the files in
    the official source distribution, as well as the source
    distribution itself.</para>
    
    <para>A copy of the GNU General Public License can be found in the
    file LICENSE in the top directory of the official source
    distribution. The license is also available in several formats
    through the World Wide Web, via <ulink
    url="http://www.gnu.org/licenses/licenses.html#GPL">http://www.gnu.org/licenses/licenses.html#GPL</ulink>,
    or you can write the Free Software Foundation, Inc., 675 Mass Ave,
    Cambridge, MA 02139, USA.</para>
    
    <para>GNUsound is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.</para>
  </sect1>

  <sect1 id="contact">
    <title>Contact</title>
    <para>Please address questions, bug reports, and suggestions to the
    GNUsound mailing list: 
    <email>gnusound-common@lists.sourceforge.net</email></para>

    <para>For inquiries related to donations or other forms of sponsoring
    please contact:
    <email>pascal@gnu.org</email></para>
  </sect1>

</article>
